<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AdguardHome 家用服务器部署</title>
      <link href="/posts/bc5e3270-8eed-4f0d-adc3-ce1de33d2672/"/>
      <url>/posts/bc5e3270-8eed-4f0d-adc3-ce1de33d2672/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>系统为Debian</li><li>提前安装 Docker Docker-compose</li><li>因为仅作为内网使用，没有DoH DoT之类的繁琐操作</li></ul><h2 id="安装-AdguardHome"><a href="#安装-AdguardHome" class="headerlink" title="安装 AdguardHome"></a>安装 AdguardHome</h2><ol><li><p>创建 docker-compose.yml 文件</p></li><li><p>写入以下信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">adguardhome:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">adguard/adguardhome:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">adguardhome</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./work:/opt/adguardhome/work</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf:/opt/adguardhome/conf</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">53</span><span class="string">:53/tcp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">53</span><span class="string">:53/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3000</span><span class="string">:3000/tcp</span> <span class="comment">#面板管理端口</span></span><br></pre></td></tr></table></figure></li><li><p>运行docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure></li></ol><h2 id="过滤器列表"><a href="#过滤器列表" class="headerlink" title="过滤器列表"></a>过滤器列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">默认表全开</span><br><span class="line">https://anti-ad.net/easylist.txt</span><br><span class="line">https://raw.githubusercontent.com/mitchellkrogza/The-Big-List-of-Hacked-Malware-Web-Sites/master/hosts</span><br><span class="line">https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareAdGuardHome.txt</span><br><span class="line">https://cdn.jsdelivr.net/gh/o0HalfLife0o/list@master/ad-pc.txt</span><br><span class="line">https://cdn.jsdelivr.net/gh/banbendalao/ADgk@master/ADgk.txt</span><br><span class="line">https://easylist-downloads.adblockplus.org/antiadblockfilters.txt</span><br><span class="line">https://www.i-dont-care-about-cookies.eu/abp</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/AdguardTeam/AdGuardHome/wiki/Getting-Started">https://github.com/AdguardTeam/AdGuardHome/wiki/Getting-Started</a><br><a href="https://adguard.com/en/adguard-home/overview.html">https://adguard.com/en/adguard-home/overview.html</a></p>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> adguard </tag>
            
            <tag> dns </tag>
            
            <tag> selfhost </tag>
            
            <tag> 搭建 </tag>
            
            <tag> 广告 </tag>
            
            <tag> antiad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare WAF规则基础版本</title>
      <link href="/posts/29a7409f-463b-4bce-b846-ab424dd83f8d/"/>
      <url>/posts/29a7409f-463b-4bce-b846-ab424dd83f8d/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>看了眼网上的规则, 一言难尽, 故释放本站使用的WAF规则</li><li>之所以为基础版本, 是因为部分操作如果被公开, 只会让规则被泛滥, 将FREE版本下原本就少的方法被绕过</li><li>我的<a href="https://t.me/moxid_channel">频道</a>已发布最新的基于API的请求限制脚本, 可脱离服务器运行</li></ul><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><ul><li><p>规则一 阻止: 原本想要ban全部bot UA, 但由于规则有4096字数限制故取消</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(not http.request.method in &#123;&quot;GET&quot; &quot;POST&quot;&#125;) or </span><br><span class="line">(not http.user_agent contains &quot;Mozilla/5.0 (&quot;) or </span><br><span class="line">(not http.request.uri.path contains &quot;/a&quot; and not http.request.uri.path contains &quot;/b&quot;) or # 这里自行替换源站路径, 如果懒的话就删掉该规则</span><br><span class="line">(not ssl) or </span><br><span class="line">(http.user_agent contains &quot;scaninfo@expanseinc.com&quot;) or </span><br><span class="line">(http.user_agent contains &quot;Acunetix&quot;) or </span><br><span class="line">(lower(http.user_agent) contains &quot;apache&quot;) or </span><br><span class="line">(http.user_agent contains &quot;BackDoorBot&quot;) or </span><br><span class="line">(http.user_agent contains &quot;censys&quot;) or </span><br><span class="line">(http.user_agent contains &quot;cobion&quot;) or </span><br><span class="line">(http.user_agent contains &quot;masscan&quot;) or </span><br><span class="line">(http.user_agent contains &quot;FHscan&quot;) or </span><br><span class="line">(http.user_agent contains &quot;scanbot&quot;) or </span><br><span class="line">(http.user_agent contains &quot;Gscan&quot;) or </span><br><span class="line">(http.user_agent contains &quot;Researchscan&quot;) or </span><br><span class="line">(http.user_agent contains &quot;WPScan&quot;) or </span><br><span class="line">(http.user_agent contains &quot;ScanAlert&quot;) or </span><br><span class="line">(http.user_agent contains &quot;Wprecon&quot;) or </span><br><span class="line">(lower(http.user_agent) contains &quot;virusdie&quot;) or </span><br><span class="line">(http.user_agent contains &quot;VoidEYE&quot;) or </span><br><span class="line">(http.user_agent contains &quot;WebShag&quot;) or </span><br><span class="line">(http.user_agent contains &quot;Zeus&quot;) or </span><br><span class="line">(http.user_agent contains &quot;zgrab&quot;) or </span><br><span class="line">(lower(http.user_agent) contains &quot;zmap&quot;) or </span><br><span class="line">(lower(http.user_agent) contains &quot;nmap&quot;) or </span><br><span class="line">(lower(http.user_agent) contains &quot;fimap&quot;) or </span><br><span class="line">(http.user_agent contains &quot;ZmEu&quot;) or </span><br><span class="line">(http.user_agent contains &quot;ZumBot&quot;) or </span><br><span class="line">(http.user_agent contains &quot;Zyborg&quot;)</span><br></pre></td></tr></table></figure></li><li><p>规则二 质询: 很简单的ip 国家 ban, 没技术含量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(ip.src in $ip_blacklist) or # 该规则调用保存在CF的列表, 如果没有就自行删除</span><br><span class="line">(ip.geoip.country in &#123;&quot;XX&quot;&#125;) or # 自行增加</span><br><span class="line">(ip.geoip.asnum in &#123;9009&#125;) or # 自行增加</span><br><span class="line">(cf.threat_score gt 1) or </span><br><span class="line">(not http.request.version in &#123;&quot;SPDY/3.1&quot; &quot;HTTP/3&quot; &quot;HTTP/2&quot;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>规则三 Js验证:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(cf.threat_score gt 0) or </span><br><span class="line">(http.cookie eq &quot;&quot; and http.request.uri.query ne &quot;&quot;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>Cloudflare 各官方文档</p>]]></content>
      
      
      <categories>
          
          <category> optimization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> rule </tag>
            
            <tag> firewall </tag>
            
            <tag> 规则 </tag>
            
            <tag> 基础 </tag>
            
            <tag> 防御 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 本地部署 Bitwarden_rs Vaultwarden</title>
      <link href="/posts/4a9f0e6e-9226-4f2a-a743-59f3efe5d2d7/"/>
      <url>/posts/4a9f0e6e-9226-4f2a-a743-59f3efe5d2d7/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>系统环境为 Debian</li><li>使用了非官方的 Vaultwarden 而不是官方版本是因为该版本占用终极低</li><li>该版本存在一定的同步问题 (ws通讯)，介意请用官方版本</li><li>文章采用 Argo Tunnel 作为对外通讯手段，可自行选择其他隧道</li></ul><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><ol><li><p>安装前置组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ca-certificates curl gnupg lsb-release</span><br></pre></td></tr></table></figure></li><li><p>添加官方GPG公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure></li><li><p>添加Docker stable源 (其他版本的安装自行查看<a href="https://docs.docker.com/engine/install/debian/">官方文档</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> \</span><br><span class="line"><span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \</span></span><br><span class="line"><span class="string"><span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure></li><li><p>安装Docker套装 (包括docker-compose)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-compose</span><br></pre></td></tr></table></figure></li><li><p>启动Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装-Argo-Tunnel"><a href="#安装-Argo-Tunnel" class="headerlink" title="安装 Argo Tunnel"></a>安装 Argo Tunnel</h2><ol><li><p>请参考我的另一篇文章安装 创建 并解析到域名，完成配置文件创建</p></li><li><p>配置文件编写</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tunnel:</span> <span class="string">&lt;TUNNEL_ID&gt;</span></span><br><span class="line"><span class="attr">credentials-file:</span> <span class="string">/主目录/.cloudflared/&lt;TUNNEL_ID&gt;.json</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hostname:</span> <span class="string">&lt;DOMAIN&gt;</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">http://localhost:443</span></span><br><span class="line">    <span class="attr">originRequest:</span></span><br><span class="line">      <span class="attr">noTLSVerify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">service:</span> <span class="string">http_status:404</span></span><br></pre></td></tr></table></figure></li><li><p>添加到服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行以下命令创建服务</span></span><br><span class="line">cloudflared service install</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行以下命令启动服务</span></span><br><span class="line">systemctl start cloudflared</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行以下命令设置开机自启</span></span><br><span class="line">systemctl enable cloudflared</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行以下命令查看服务状态</span></span><br><span class="line">systemctl status cloudflared</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行以下命令关闭服务</span></span><br><span class="line">systenctl stop cloudflared</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装-Valutwarden"><a href="#安装-Valutwarden" class="headerlink" title="安装 Valutwarden"></a>安装 Valutwarden</h2><ol><li><p>创建 docker-compose.yml 文件并写入以下信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">bitwarden:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">vaultwarden/server:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">bitwarden</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ROCKET_TLS=&#123;certs=&quot;/ssl/certs.pem&quot;,key=&quot;/ssl/key.pem&quot;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">INVITATIONS_ALLOWED=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SIGNUPS_ALLOWED=true</span> <span class="comment">#记得在注册完管理员账户后取消</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ADMIN_TOKEN=</span> <span class="comment">#此处填写足够长的随机字符 32+</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOMAIN=</span> <span class="comment">#填写刚刚注册的域名 https://example.com</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">_ENABLE_SMTP=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">IP_HEADER=CF-Connecting-IP</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LOG_LEVEL=error</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">EXTENDED_LOGGING=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">EMERGENCY_ACCESS_ALLOWD=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">_ENABLE_YUBICO=false</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data/:/data/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./ssl/:/ssl/</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:40443:80</span></span><br></pre></td></tr></table></figure></li><li><p>同目录下创建ssl文件夹, 到Cloudflare申请客户端证书 注意仅支持RSA2048, 创建certs.pem将公钥填写进 创建key.pem填写私钥</p></li><li><p>运行docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure></li><li><p>打开网页，因为已经设置了Argo Tunnel，使用域名即可</p></li><li><p>注册一个账户</p></li><li><p>修改docker-compose.yml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">bitwarden:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">vaultwarden/server:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">bitwarden</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ROCKET_TLS=&#123;certs=&quot;/ssl/certs.pem&quot;,key=&quot;/ssl/key.pem&quot;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">INVITATIONS_ALLOWED=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SIGNUPS_ALLOWED=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ADMIN_TOKEN=</span> <span class="comment">#此处填写足够长的随机字符 32+</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOMAIN=</span> <span class="comment">#填写刚刚注册的域名 https://example.com</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">_ENABLE_SMTP=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">IP_HEADER=CF-Connecting-IP</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LOG_LEVEL=error</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">EXTENDED_LOGGING=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">EMERGENCY_ACCESS_ALLOWD=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">_ENABLE_YUBICO=false</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data/:/data/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./ssl/:/ssl/</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:40443:80</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>因为这个的安装真的很复杂，存在大量设置需要修改，这只是一个我用起来最舒服的版本。这个文章看起来少，对于整个项目的调试花了接近半天才找出这么一个较为完善的版本，未来文章可能还会多次修改。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/dani-garcia/vaultwarden/wiki">https://github.com/dani-garcia/vaultwarden/wiki</a></p><p><a href="https://bitwarden.com/help/">https://bitwarden.com/help/</a></p><p><a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/">https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/</a></p>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> bitwarden </tag>
            
            <tag> vaultwarden </tag>
            
            <tag> 本地 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 密码管理器 </tag>
            
            <tag> manager </tag>
            
            <tag> password </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 命令行安装 V2rayA 给系统提供代理服务</title>
      <link href="/posts/4acf8d55-f4ee-453a-af36-7b65d84c3317/"/>
      <url>/posts/4acf8d55-f4ee-453a-af36-7b65d84c3317/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>安装系统为Debian</li><li>为了方便迁移, 采用docker安装</li></ul><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><ol><li><p>安装前置组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ca-certificates curl gnupg lsb-release</span><br></pre></td></tr></table></figure></li><li><p>添加官方GPG公钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure></li><li><p>添加Docker stable源 (其他版本的安装自行查看<a href="https://docs.docker.com/engine/install/debian/">官方文档</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo \</span><br><span class="line">&quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \</span><br><span class="line">$(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure></li><li><p>安装Docker套装 (包括docker-compose)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-compose</span><br></pre></td></tr></table></figure></li><li><p>启动Docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装-V2rayA"><a href="#安装-V2rayA" class="headerlink" title="安装 V2rayA"></a>安装 V2rayA</h2><ol><li><p>在Home目录创建新文件夹并移动到该目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/v2raya/</span><br><span class="line">cd ~/v2raya/</span><br></pre></td></tr></table></figure></li><li><p>创建Docker-compose文件并编辑与其需要用到的文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/v2raya/modules/</span><br><span class="line">mkdir ~/v2raya/</span><br><span class="line"></span><br><span class="line">vi docker-compose.yml</span><br><span class="line">or</span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure></li><li><p>写入&amp;保存docker-compose</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">v2raya:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mzz2017/v2raya:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">v2raya</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">V2RAYA_ADDRESS=0.0.0.0:2017</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/lib/modules:/lib/modules:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/resolv.conf:/etc/resolv.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./v2raya:/etc/v2raya</span></span><br></pre></td></tr></table></figure></li><li><p>运行docker-compose</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure></li><li><p>防火墙放行2017端口（其他方法自行搜索）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 2017/tcp</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置V2rayA"><a href="#配置V2rayA" class="headerlink" title="配置V2rayA"></a>配置V2rayA</h2><ol><li><p>打开配置界面 ip:2017</p></li><li><p>创建账户</p><p><img src="https://s2.loli.net/2022/06/04/NOlCZuDbiSm9UWh.png" alt="001_zip"></p></li><li><p>导入节点, 支持订阅链接 节点链接</p><p><img src="https://s2.loli.net/2022/06/04/KPzj2ocB4uhfATC.png" alt="002_zip"></p></li><li><p>完成后节点将显示在Server或新的标签中</p><p><img src="https://s2.loli.net/2022/06/04/CRa4ShtPsB6okAZ.png" alt="003_zip"></p></li><li><p>选择一个或多个节点, 左上角运行</p><p><img src="https://s2.loli.net/2022/06/04/Z6mTvLh5NFBdzMp.png" alt="004_zip"></p></li><li><p>右上角设置可选择调整规则, 推荐全局</p></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://v2raya.org/docs">https://v2raya.org/docs</a></p><p><a href="https://docs.docker.com/engine/install/">https://docs.docker.com/engine/install/</a></p>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
      </categories>
      
      
        <tags>
            
            <tag> install </tag>
            
            <tag> 部署 </tag>
            
            <tag> linux </tag>
            
            <tag> v2ray </tag>
            
            <tag> v2raya </tag>
            
            <tag> proxy </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare Argo Tunnel 安装教程</title>
      <link href="/posts/3aadcc90-fd56-4961-a5d9-87d9387c79b2/"/>
      <url>/posts/3aadcc90-fd56-4961-a5d9-87d9387c79b2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ol><li>本文均为一劳永逸的方法，故和网上教程可能大相径庭。</li><li>请自备Cloudflare账号且有域名。</li><li>如果有任何疑问，请查看<a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps">官方文档</a>。</li></ol><h2 id="安装运行"><a href="#安装运行" class="headerlink" title="安装运行"></a>安装运行</h2><ol><li><p>依据系统类型选择，安装完成后使用<code>cloudflared</code>命令来调用。（<a href="https://pkg.cloudflare.com/">官方文档</a>）</p><p><strong>RHEL和Centos系统选用该代码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -e gpg-pubkey-8e5f9a5d-* <span class="comment">#删除旧密钥（如果有的话）</span></span><br><span class="line">sudo rpm --import https://pkg.cloudflare.com/pubkey.gpg <span class="comment">#安装新密钥</span></span><br><span class="line">sudo rpm -ivh http://pkg.cloudflare.com/cloudflare-release-latest.el&lt;VERSION&gt;.rpm <span class="comment">#安装存储库，VERSION为系统版本号自行修改。（6，7）</span></span><br><span class="line">yum install cloudflared <span class="comment">#安装cloudflared</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例子 在Centos7上安装</span></span><br><span class="line">sudo rpm -e gpg-pubkey-8e5f9a5d-*</span><br><span class="line">sudo rpm --import https://pkg.cloudflare.com/pubkey.gpg</span><br><span class="line">sudo rpm -ivh http://pkg.cloudflare.com/cloudflare-release-latest.el7.rpm</span><br><span class="line">yum install cloudflared</span><br></pre></td></tr></table></figure><p><strong>Ubuntu</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key del 8e5f9a5d <span class="comment">#删除旧密钥（如果有的话）</span></span><br><span class="line">sudo curl https://pkg.cloudflare.com/cloudflare-main.gpg -o /usr/share/keyrings/cloudflare-main.gpg <span class="comment">#安装新密钥 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/ &lt;RELEASE&gt; main&#x27;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/cloudflare-main.list <span class="comment">#安装存储库，RELEASE为系统版本号自行修改。[focal(20.04),xenial(16.04),wily(15.10),vivid(15.04),utopic(14.10),trusty(14.04),precise(12.04)]</span></span><br><span class="line">sudo apt-get update <span class="comment">#更新缓存</span></span><br><span class="line">apt-get install cloudflared <span class="comment">#安装cloudflared</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例子 在Ubuntu20.04上安装</span></span><br><span class="line">sudo apt-key del 8e5f9a5d</span><br><span class="line">sudo curl https://pkg.cloudflare.com/cloudflare-main.gpg -o /usr/share/keyrings/cloudflare-main.gpg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/ focal main&#x27;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/cloudflare-main.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">apt-get install cloudflared</span><br></pre></td></tr></table></figure><p><strong>Debian</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key del 8e5f9a5d <span class="comment">#删除旧密钥（如果有的话）</span></span><br><span class="line">sudo curl https://pkg.cloudflare.com/cloudflare-main.gpg -o /usr/share/keyrings/cloudflare-main.gpg <span class="comment">#安装新密钥 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/ &lt;RELEASE&gt; main&#x27;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/cloudflare-main.list <span class="comment">#安装存储库，RELEASE为系统版本号自行修改。[buster(10),stretch(9),jessie(8),wheezy(7),squeeze(6)]</span></span><br><span class="line">sudo apt-get update <span class="comment">#更新缓存</span></span><br><span class="line">apt-get install cloudflared <span class="comment">#安装cloudflared</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例子 在Debian10上安装</span></span><br><span class="line">sudo apt-key del 8e5f9a5d</span><br><span class="line">sudo curl https://pkg.cloudflare.com/cloudflare-main.gpg -o /usr/share/keyrings/cloudflare-main.gpg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/ buster main&#x27;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/cloudflare-main.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">apt-get install cloudflared</span><br></pre></td></tr></table></figure></li><li><p>登录Cloudflare，输出为一串网址或直接打开浏览器，网址复制黏贴到浏览器中，登录自己的账户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel login</span><br></pre></td></tr></table></figure></li><li><p>创建隧道，名称随意。创建完成后会给出一个<code>&lt;TUNNEL_ID&gt;</code>，写好后面要用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel create &lt;NAME&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#例子</span></span><br><span class="line">cloudflared tunnel create Example</span><br></pre></td></tr></table></figure></li><li><p>绑定<code>&lt;NAME&gt;</code>隧道到<code>&lt;DOMAIN&gt;</code>域名，如果想要绑定到子域名那么<code>&lt;DOMAIN&gt;</code>请填写完整的子域名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel route dns &lt;NAME&gt; &lt;DOMAIN&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#例子</span></span><br><span class="line">cloudflared tunnel route dns Example a.domain.com</span><br></pre></td></tr></table></figure></li><li><p>此时已经可以正常使用，不过我们使用配置文件启动，所以还需要一些步骤。</p></li><li><p>打开<code>/root/.cloudflared/</code>（可能有所不同，请自行查找<code>.cloudflared</code>文件夹），并新建一个<code>config.yml</code>填入以下内容。</p><p>其中<code>&lt;TUNNEL_ID&gt;</code>为你的隧道ID，在创建时会给出。</p><p><code>credentials-file</code>部分请根据你的实际路径填写。</p><p><code>ingress</code>这里，每一条<code>-</code>就是一个规则，其中hostname请填写刚刚创建时填写的<code>&lt;DOMAIN&gt;</code>，<code>service</code>就是填写你想要绑定的东西，http则代表http协议，<a href="##%E6%89%80%E6%9C%89%E6%94%AF%E6%8C%81%E7%9A%84%E5%8D%8F%E8%AE%AE">文章末尾的表格</a>给出了所有支持的服务。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tunnel:</span> <span class="string">&lt;TUNNEL_ID&gt;</span></span><br><span class="line"><span class="attr">credentials-file:</span> <span class="string">/主目录/.cloudflared/&lt;TUNNEL_ID&gt;.json</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hostname:</span> <span class="string">&lt;DOMAIN&gt;</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">&lt;SERVICE&gt;://localhost:80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">service:</span> <span class="string">http_status:404</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例子</span></span><br><span class="line"><span class="attr">tunnel:</span> <span class="string">81f41a92-7556-41dg-831h-21x5575fuh6f</span></span><br><span class="line"><span class="attr">credentials-file:</span> <span class="string">/root/.cloudflared/81f41a92-7556-41dg-831h-21x5575fuh6f.json</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hostname:</span> <span class="string">a.domain.com</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">http://localhost:80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">service:</span> <span class="string">http_status:404</span></span><br></pre></td></tr></table></figure></li><li><p>在完成编辑后，直接运行即可，此时的服务还是运行在前台的，可以使用nohup或screen来后台运行，但不推荐。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel run</span><br></pre></td></tr></table></figure></li></ol><h3 id="将Cloudflared添加到service"><a href="#将Cloudflared添加到service" class="headerlink" title="将Cloudflared添加到service"></a>将Cloudflared添加到service</h3><ol><li><p>这是我最推荐的用法，也是本教程的最后一步，完成以上步骤后才能添加到service。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行以下命令创建服务</span></span><br><span class="line">cloudflared service install</span><br><span class="line"><span class="comment">#运行以下命令启动服务</span></span><br><span class="line">systemctl start cloudflared</span><br><span class="line"><span class="comment">#运行以下命令设置开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> cloudflared</span><br><span class="line"><span class="comment">#运行以下命令查看服务状态</span></span><br><span class="line">systemctl status cloudflared</span><br><span class="line"><span class="comment">#运行以下命令关闭服务</span></span><br><span class="line">systenctl stop cloudflared</span><br></pre></td></tr></table></figure></li></ol><h2 id="删除隧道"><a href="#删除隧道" class="headerlink" title="删除隧道"></a>删除隧道</h2><ol><li><p>运行以下指令删除隧道（执行后会立即将本地隧道文件删除，DNS记录将于24-48小时后删除，域名绑定请手动删除）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel delete &lt;NAME&gt;</span><br><span class="line"><span class="comment">#添加 -f 强制删除运行中的tunnel</span></span><br><span class="line">cloudflared tunnel delete -f &lt;NAME&gt;</span><br><span class="line"><span class="comment">#例子 删除我们刚刚创建的隧道</span></span><br><span class="line">cloudflared tunnel delete Example</span><br></pre></td></tr></table></figure></li></ol><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li><p>因为地区不同，部分tunnel存在ERR Connection terminated的问题，使用service会造成大量日志文件导致硬盘爆炸，如果发现有类似的问题，使用以下代码运行。（错误的原因大致为tunnel为了容错默认会连接到3个服务器，如果当前地区数量不够，那么tunnel就会重复的连接到同一台上而造成错误）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> cloudflared tunnel --ha-connections 1 run &amp; <span class="comment">#ha-connections的作用就是限制备份服务器的连接数量</span></span><br></pre></td></tr></table></figure></li><li><p>在使用一段时间后可能在<a href="https://dash.cloudflare.com/profile/api-tokens">这里</a>会发现大量的API KEY，具体原因未知，可进行删除，暂未发现影响。</p></li></ol><h2 id="所有支持的协议"><a href="#所有支持的协议" class="headerlink" title="所有支持的协议"></a>所有支持的协议</h2><table><thead><tr><th>Service</th><th>Description</th><th>Example <code>service</code> value</th></tr></thead><tbody><tr><td>HTTP&#x2F;S</td><td>Incoming HTTP requests are proxied directly to your local service.</td><td><code>https://localhost:8000</code></td></tr><tr><td>HTTP&#x2F;S over Unix socket</td><td>Just like HTTP&#x2F;S, but using a Unix socket instead.</td><td><code>unix:/home/production/echo.sock</code></td></tr><tr><td>TCP</td><td>TCP connections are proxied to your local service.</td><td><code>tcp://localhost:2222</code></td></tr><tr><td>SSH</td><td>SSH connections are proxied to your local service.</td><td><code>ssh://localhost:22</code></td></tr><tr><td>RDP</td><td>RDP connections are proxied to your local service.</td><td><code>rdp://localhost:3389</code></td></tr><tr><td>kubectl bastion mode</td><td><code>cloudflared</code> will act like a jumphost, allowing access to any local address.</td><td><code>bastion</code></td></tr><tr><td>Hello World</td><td>Test server for validating your Cloudflare Tunnel setup.</td><td><code>hello_world</code></td></tr><tr><td>HTTP status</td><td>Responds to all requests with the given HTTP status.</td><td><code>http_status:404</code></td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developers.cloudflare.com/cloudflare-one/connections">https://developers.cloudflare.com/cloudflare-one/connections</a></p><p><a href="https://pkg.cloudflare.com/">https://pkg.cloudflare.com/</a></p><p><a href="https://github.com/cloudflare/cloudflared">https://github.com/cloudflare/cloudflared</a></p>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> argotunnel </tag>
            
            <tag> install </tag>
            
            <tag> 加速 </tag>
            
            <tag> 部署 </tag>
            
            <tag> 安装 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux SSH配置证书登录 告别密码</title>
      <link href="/posts/17765453-578e-47cf-b1a5-3e70a9344993/"/>
      <url>/posts/17765453-578e-47cf-b1a5-3e70a9344993/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ol><li>这篇的目的就是提供更加简洁方便的教程。</li><li>默认用户已经拥有root权限，没有请自行添加sudo。</li></ol><h2 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h2><ul><li><p><strong>如果没有证书</strong>：输入以下代码生成</p><p>输入后在当前目录下的<strong>隐藏</strong>文件夹<code>.ssh</code>中生成公钥<code>id_rsa.pub</code>和私钥<code>id_rsa</code>。</p><p>期间会让你输入私钥路径和密码，<strong>留空默认即可</strong>。</p><p>生成完成后本地保存私钥，服务器仅保留公钥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~ <span class="comment">#回到主目录</span></span><br><span class="line">ssh-keygen -t rsa <span class="comment">#生成证书</span></span><br></pre></td></tr></table></figure></li><li><p><strong>如果已拥有证书</strong>：上传公钥<code>id_rsa.pub</code>到服务器主目录的文件夹<code>.ssh</code>下</p></li></ul><h2 id="设置证书登录"><a href="#设置证书登录" class="headerlink" title="设置证书登录"></a>设置证书登录</h2><ol><li><p>进入<code>.ssh</code>目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br></pre></td></tr></table></figure></li><li><p>新建密钥验证文件<code>authorized_keys</code>，并将公钥输出重定向覆盖密钥验证文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> authorized_keys <span class="comment">#创建一个名为authorized_keys的空文件，可以使用其他指令</span></span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys <span class="comment">#将公钥内容导入到authorized_keys文件内</span></span><br></pre></td></tr></table></figure></li><li><p>修改<code>authorized_keys</code>文件权限为600</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 authorized_keys <span class="comment">#chmod修改权限为600</span></span><br></pre></td></tr></table></figure></li><li><p>修改<code>/etc/ssh/sshd_config</code>如下部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication <span class="built_in">yes</span> <span class="comment">#开启RSA验证（貌似部分没有这个选项</span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span> <span class="comment">#是否使用公钥验证</span></span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys <span class="comment">#公钥的保存位置</span></span><br></pre></td></tr></table></figure></li><li><p>重启sshd服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure></li><li><p>本地使用密钥登录，测试是否有配置问题</p></li><li><p>测试无误后再次修改<code>/etc/ssh/sshd_config</code>，把密码登录关闭</p><p><strong>警告！错误的配置会造成无法挽回的后果，请先测试后再关闭密码登录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure></li></ol><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul><li><p>证书登录对以下文件有权限要求（默认无需修改）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 700 ~ <span class="comment"># 即主目录 权限为 700</span></span><br><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh <span class="comment"># 权限为 700</span></span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys <span class="comment"># 权限为 600</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> login </tag>
            
            <tag> linux </tag>
            
            <tag> 证书 </tag>
            
            <tag> 登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Argo Tunnel建站 避免源站泄露</title>
      <link href="/posts/e65766aa-6a38-4ea1-88ca-68a3e4fa17f2/"/>
      <url>/posts/e65766aa-6a38-4ea1-88ca-68a3e4fa17f2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ol><li>Tunnel的安装与创建教程<a href="https://moxid.eu.org/archives/3/">看这一篇</a>，此默认用户完成所有配置。</li><li>本文只有Tunnel相关的内容，网站部署相关内容自行搜索。</li></ol><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ol><li><p>创建一个隧道并绑定域名，记录隧道id。<a href="https://moxid.eu.org/archives/3/">教程</a></p></li><li><p>编辑<code>config.yml</code>配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">tunnel: &lt;TUNNEL_ID&gt;</span><br><span class="line">credentials-file: /主目录/.cloudflared/&lt;TUNNEL_ID&gt;.json</span><br><span class="line"></span><br><span class="line">ingress:</span><br><span class="line">  - hostname: &lt;DOMAIN&gt; #绑定隧道时的域名</span><br><span class="line">    service: http://localhost:80 #在80端口上开放http服务</span><br><span class="line">  - service: http_status:404</span><br><span class="line"></span><br><span class="line">#例子</span><br><span class="line">tunnel: 81f41a92-7556-41dg-831h-21x5575fuh6f</span><br><span class="line">credentials-file: /root/.cloudflared/81f41a92-7556-41dg-831h-21x5575fuh6f.json</span><br><span class="line"></span><br><span class="line">ingress:</span><br><span class="line">  - hostname: a.domain.com</span><br><span class="line">    service: http://localhost:80</span><br><span class="line">  - service: http_status:404</span><br></pre></td></tr></table></figure></li><li><p>运行Tunnel</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start cloudflared</span><br></pre></td></tr></table></figure></li><li><p>不出意外的话已经可以正常使用了（意外永远都有）</p></li></ol><h2 id="关闭服务器对外端口"><a href="#关闭服务器对外端口" class="headerlink" title="关闭服务器对外端口"></a>关闭服务器对外端口</h2><ol><li>设置完成后所有流量都走的Tunnel，可以关闭服务器的80和443端口避免源站暴露。<code>iptables</code>和<code>firewalld</code>相关教程自行搜索。</li></ol><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>网站不要强制https也不用申请证书，Cloudflare会把这一切都帮你办好。</li><li><code>config.yml</code>当中虽然可以使用HTTPS和443端口，但是这除了增加bug和运算量没有任何的好处。</li><li>推荐在Cloudflare开启强制HTTPS、HSTS并且修改SSL加密模式为完全（严格）。</li><li><strong>重要！</strong>不要使用IP访问量防御插件，因为是本地传输，所有的流量都来自127.0.0.1，插件很有可能会直接封禁该地址而导致所有人都无法访问</li><li>Tunnel如果被关闭，Cloudflare会直接显示错误代码，而不是Always Online页面。</li></ol>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> argotunnel </tag>
            
            <tag> 防御 </tag>
            
            <tag> 建站 </tag>
            
            <tag> 源站 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
